{
  "version": 3,
  "sources": ["../../../../server/chat-plugins/randombattles/ssb.ts"],
  "sourcesContent": ["import {SSBSet, ssbSets} from \"../../../data/mods/gen9ssb/random-teams\";\nimport {Utils} from \"../../../lib\";\nimport {formatNature, STAT_NAMES} from \".\";\n\nfunction generateSSBSet(set: SSBSet, dex: ModdedDex, baseDex: ModdedDex) {\n\tif (set.skip) {\n\t\tconst baseSet = toID(Object.values(ssbSets[set.skip]).join());\n\t\tconst skipSet = toID(Object.values(set).join()).slice(0, -toID(set.skip).length);\n\t\tif (baseSet === skipSet) return ``;\n\t}\n\tlet buf = ``;\n\tbuf += `<details><summary>Set</summary>`;\n\tbuf += `<ul style=\"list-style-type:none;\"><li>${set.species}${set.gender !== '' ? ` (${set.gender})` : ``}`;\n\tbuf += `${set.item ? ' @ ' : ''}${Array.isArray(set.item) ? set.item.map(x => dex.items.get(x).name).join(' / ') : dex.items.get(set.item).name}</li>`;\n\tbuf += `<li>Ability: ${Array.isArray(set.ability) ? set.ability.map(x => dex.abilities.get(x).name).join(' / ') : dex.abilities.get(set.ability).name}</li>`;\n\tif (set.teraType) {\n\t\tbuf += `<li>Tera Type: ${Array.isArray(set.teraType) ? set.teraType.map(x => dex.types.get(x).name).join(' / ') : set.teraType === 'Any' ? 'Any' : dex.types.get(set.teraType).name}</li>`;\n\t}\n\tif (set.shiny) buf += `<li>Shiny: ${typeof set.shiny === 'number' ? `1 in ${set.shiny} chance` : `Yes`}</li>`;\n\tif (set.evs) {\n\t\tconst evs: string[] = [];\n\t\tlet ev: StatID;\n\t\tfor (ev in set.evs) {\n\t\t\tif (set.evs[ev] === 0) continue;\n\t\t\tevs.push(`${set.evs[ev]} ${STAT_NAMES[ev]}`);\n\t\t}\n\t\tbuf += `<li>EVs: ${evs.join(\" / \")}</li>`;\n\t}\n\tif (set.nature) {\n\t\tbuf += `<li>${Array.isArray(set.nature) ? set.nature.map(x => formatNature(x)).join(\" / \") : formatNature(set.nature)} Nature</li>`;\n\t}\n\tif (set.ivs) {\n\t\tconst ivs: string[] = [];\n\t\tlet iv: StatID;\n\t\tfor (iv in set.ivs) {\n\t\t\tif (set.ivs[iv] === 31) continue;\n\t\t\tivs.push(`${set.ivs[iv]} ${STAT_NAMES[iv]}`);\n\t\t}\n\t\tbuf += `<li>IVs: ${ivs.join(\" / \")}</li>`;\n\t}\n\tfor (const moveid of set.moves) {\n\t\tbuf += `<li>- ${Array.isArray(moveid) ? moveid.map(x => dex.moves.get(x).name).join(\" / \") : dex.moves.get(moveid).name}</li>`;\n\t}\n\tconst italicize = !baseDex.moves.get(set.signatureMove).exists;\n\tbuf += `<li>- ${italicize ? `<i>` : ``}${dex.moves.get(set.signatureMove).name}${italicize ? `</i>` : ``}</li>`;\n\tbuf += `</ul>`;\n\tbuf += `</details>`;\n\treturn buf;\n}\n\nfunction generateSSBMoveInfo(sigMove: Move, dex: ModdedDex) {\n\tlet buf = ``;\n\tif (sigMove.shortDesc || sigMove.desc) {\n\t\tbuf += `<hr />`;\n\t\tbuf += Chat.getDataMoveHTML(sigMove);\n\t\tconst details: {[k: string]: string} = {\n\t\t\tPriority: String(sigMove.priority),\n\t\t\tGen: String(sigMove.gen || 9),\n\t\t};\n\n\t\tif (sigMove.isNonstandard === \"Past\" && dex.gen >= 8) details[\"&#10007; Past Gens Only\"] = \"\";\n\t\tif (sigMove.secondary || sigMove.secondaries || sigMove.hasSheerForce) details[\"&#10003; Boosted by Sheer Force\"] = \"\";\n\t\tif (sigMove.flags['contact'] && dex.gen >= 3) details[\"&#10003; Contact\"] = \"\";\n\t\tif (sigMove.flags['sound'] && dex.gen >= 3) details[\"&#10003; Sound\"] = \"\";\n\t\tif (sigMove.flags['bullet'] && dex.gen >= 6) details[\"&#10003; Bullet\"] = \"\";\n\t\tif (sigMove.flags['pulse'] && dex.gen >= 6) details[\"&#10003; Pulse\"] = \"\";\n\t\tif (!sigMove.flags['protect'] && sigMove.target !== 'self') details[\"&#10003; Bypasses Protect\"] = \"\";\n\t\tif (sigMove.flags['bypasssub']) details[\"&#10003; Bypasses Substitutes\"] = \"\";\n\t\tif (sigMove.flags['defrost']) details[\"&#10003; Thaws user\"] = \"\";\n\t\tif (sigMove.flags['bite'] && dex.gen >= 6) details[\"&#10003; Bite\"] = \"\";\n\t\tif (sigMove.flags['punch'] && dex.gen >= 4) details[\"&#10003; Punch\"] = \"\";\n\t\tif (sigMove.flags['powder'] && dex.gen >= 6) details[\"&#10003; Powder\"] = \"\";\n\t\tif (sigMove.flags['reflectable'] && dex.gen >= 3) details[\"&#10003; Bounceable\"] = \"\";\n\t\tif (sigMove.flags['charge']) details[\"&#10003; Two-turn move\"] = \"\";\n\t\tif (sigMove.flags['recharge']) details[\"&#10003; Has recharge turn\"] = \"\";\n\t\tif (sigMove.flags['gravity'] && dex.gen >= 4) details[\"&#10007; Suppressed by Gravity\"] = \"\";\n\t\tif (sigMove.flags['dance'] && dex.gen >= 7) details[\"&#10003; Dance move\"] = \"\";\n\t\tif (sigMove.flags['slicing'] && dex.gen >= 9) details[\"&#10003; Slicing move\"] = \"\";\n\t\tif (sigMove.flags['wind'] && dex.gen >= 9) details[\"&#10003; Wind move\"] = \"\";\n\n\t\tif (sigMove.zMove?.basePower) {\n\t\t\tdetails[\"Z-Power\"] = String(sigMove.zMove.basePower);\n\t\t} else if (sigMove.zMove?.effect) {\n\t\t\tconst zEffects: {[k: string]: string} = {\n\t\t\t\tclearnegativeboost: \"Restores negative stat stages to 0\",\n\t\t\t\tcrit2: \"Crit ratio +2\",\n\t\t\t\theal: \"Restores HP 100%\",\n\t\t\t\tcurse: \"Restores HP 100% if user is Ghost type, otherwise Attack +1\",\n\t\t\t\tredirect: \"Redirects opposing attacks to user\",\n\t\t\t\thealreplacement: \"Restores replacement's HP 100%\",\n\t\t\t};\n\t\t\tdetails[\"Z-Effect\"] = zEffects[sigMove.zMove.effect];\n\t\t} else if (sigMove.zMove?.boost) {\n\t\t\tdetails[\"Z-Effect\"] = \"\";\n\t\t\tconst boost = sigMove.zMove.boost;\n\t\t\tfor (const h in boost) {\n\t\t\t\tdetails[\"Z-Effect\"] += ` ${Dex.stats.mediumNames[h as 'atk']} +${boost[h as 'atk']}`;\n\t\t\t}\n\t\t} else if (sigMove.isZ && typeof sigMove.isZ === 'string') {\n\t\t\tdetails[\"&#10003; Z-Move\"] = \"\";\n\t\t\tconst zCrystal = dex.items.get(sigMove.isZ);\n\t\t\tdetails[\"Z-Crystal\"] = zCrystal.name;\n\t\t\tif (zCrystal.itemUser) {\n\t\t\t\tdetails[\"User\"] = zCrystal.itemUser.join(\", \");\n\t\t\t\tdetails[\"Required Move\"] = dex.items.get(sigMove.isZ).zMoveFrom!;\n\t\t\t}\n\t\t} else {\n\t\t\tdetails[\"Z-Effect\"] = \"None\";\n\t\t}\n\n\t\tconst targetTypes: {[k: string]: string} = {\n\t\t\tnormal: \"One Adjacent Pok\\u00e9mon\",\n\t\t\tself: \"User\",\n\t\t\tadjacentAlly: \"One Ally\",\n\t\t\tadjacentAllyOrSelf: \"User or Ally\",\n\t\t\tadjacentFoe: \"One Adjacent Opposing Pok\\u00e9mon\",\n\t\t\tallAdjacentFoes: \"All Adjacent Opponents\",\n\t\t\tfoeSide: \"Opposing Side\",\n\t\t\tallySide: \"User's Side\",\n\t\t\tallyTeam: \"User's Side\",\n\t\t\tallAdjacent: \"All Adjacent Pok\\u00e9mon\",\n\t\t\tany: \"Any Pok\\u00e9mon\",\n\t\t\tall: \"All Pok\\u00e9mon\",\n\t\t\tscripted: \"Chosen Automatically\",\n\t\t\trandomNormal: \"Random Adjacent Opposing Pok\\u00e9mon\",\n\t\t\tallies: \"User and Allies\",\n\t\t};\n\t\tdetails[\"Target\"] = targetTypes[sigMove.target] || \"Unknown\";\n\t\tif (sigMove.isNonstandard === 'Unobtainable') {\n\t\t\tdetails[`Unobtainable in Gen ${dex.gen}`] = \"\";\n\t\t}\n\t\tbuf += `<font size=\"1\">${Object.entries(details).map(([detail, value]) => (\n\t\t\tvalue === '' ? detail : `<font color=\"#686868\">${detail}:</font> ${value}`\n\t\t)).join(\"&nbsp;|&ThickSpace;\")}</font>`;\n\t\tif (sigMove.desc && sigMove.desc !== sigMove.shortDesc) {\n\t\t\tbuf += `<details><summary><strong>In-Depth Description</strong></summary>${sigMove.desc}</details>`;\n\t\t}\n\t}\n\treturn buf;\n}\n\nfunction generateSSBItemInfo(set: SSBSet, dex: ModdedDex, baseDex: ModdedDex) {\n\tlet buf = ``;\n\tif (!Array.isArray(set.item)) {\n\t\tconst baseItem = baseDex.items.get(set.item);\n\t\tconst sigItem = dex.items.get(set.item);\n\t\tif (!baseItem.exists || (baseItem.desc || baseItem.shortDesc) !== (sigItem.desc || sigItem.shortDesc)) {\n\t\t\tbuf += `<hr />`;\n\t\t\tbuf += Chat.getDataItemHTML(sigItem);\n\t\t\tconst details: {[k: string]: string} = {\n\t\t\t\tGen: String(sigItem.gen),\n\t\t\t};\n\n\t\t\tif (dex.gen >= 4) {\n\t\t\t\tif (sigItem.fling) {\n\t\t\t\t\tdetails[\"Fling Base Power\"] = String(sigItem.fling.basePower);\n\t\t\t\t\tif (sigItem.fling.status) details[\"Fling Effect\"] = sigItem.fling.status;\n\t\t\t\t\tif (sigItem.fling.volatileStatus) details[\"Fling Effect\"] = sigItem.fling.volatileStatus;\n\t\t\t\t\tif (sigItem.isBerry) details[\"Fling Effect\"] = \"Activates the Berry's effect on the target.\";\n\t\t\t\t\tif (sigItem.id === 'whiteherb') details[\"Fling Effect\"] = \"Restores the target's negative stat stages to 0.\";\n\t\t\t\t\tif (sigItem.id === 'mentalherb') {\n\t\t\t\t\t\tconst flingEffect = \"Removes the effects of Attract, Disable, Encore, Heal Block, Taunt, and Torment from the target.\";\n\t\t\t\t\t\tdetails[\"Fling Effect\"] = flingEffect;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdetails[\"Fling\"] = \"This item cannot be used with Fling.\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (sigItem.naturalGift && dex.gen >= 3) {\n\t\t\t\tdetails[\"Natural Gift Type\"] = sigItem.naturalGift.type;\n\t\t\t\tdetails[\"Natural Gift Base Power\"] = String(sigItem.naturalGift.basePower);\n\t\t\t}\n\t\t\tif (sigItem.isNonstandard && sigItem.isNonstandard !== \"Custom\") {\n\t\t\t\tdetails[`Unobtainable in Gen ${dex.gen}`] = \"\";\n\t\t\t}\n\t\t\tbuf += `<font size=\"1\">${Object.entries(details).map(([detail, value]) => (\n\t\t\t\tvalue === '' ? detail : `<font color=\"#686868\">${detail}:</font> ${value}`\n\t\t\t)).join(\"&nbsp;|&ThickSpace;\")}</font>`;\n\t\t}\n\t}\n\treturn buf;\n}\n\nfunction generateSSBAbilityInfo(set: SSBSet, dex: ModdedDex, baseDex: ModdedDex) {\n\tlet buf = ``;\n\tconst customMegaAbilities = ['Sableye', 'Ampharos'];\n\tif (!Array.isArray(set.ability) &&\n\t\t(customMegaAbilities.includes(set.species) || !baseDex.abilities.get(set.ability).exists)) {\n\t\tlet sigAbil = baseDex.deepClone(dex.abilities.get(set.ability));\n\t\tif (customMegaAbilities.includes(set.species)) {\n\t\t\tconst megaAbil = dex.species.get(`${set.species}-Mega`).abilities[0];\n\t\t\tsigAbil = baseDex.deepClone(dex.abilities.get(megaAbil));\n\t\t}\n\t\tif (!sigAbil.desc && !sigAbil.shortDesc) {\n\t\t\tsigAbil.desc = `This ability doesn't have a description. Try contacting the SSB dev team.`;\n\t\t}\n\t\tbuf += `<hr />`;\n\t\tbuf += Chat.getDataAbilityHTML(sigAbil);\n\t\tconst details: {[k: string]: string} = {\n\t\t\tGen: String(sigAbil.gen || 9) || 'CAP',\n\t\t};\n\t\tif (sigAbil.flags['cantsuppress']) details[\"&#10003; Not affected by Gastro Acid\"] = \"\";\n\t\tif (sigAbil.flags['breakable']) details[\"&#10003; Ignored by Mold Breaker\"] = \"\";\n\t\tbuf += `<font size=\"1\">${Object.entries(details).map(([detail, value]) => (\n\t\t\tvalue === '' ? detail : `<font color=\"#686868\">${detail}:</font> ${value}`\n\t\t)).join(\"&nbsp;|&ThickSpace;\")}</font>`;\n\t\tif (sigAbil.desc && sigAbil.shortDesc && sigAbil.desc !== sigAbil.shortDesc) {\n\t\t\tbuf += `<details><summary><strong>In-Depth Description</strong></summary>${sigAbil.desc}</details>`;\n\t\t}\n\t}\n\treturn buf;\n}\n\nfunction generateSSBPokemonInfo(species: string, dex: ModdedDex, baseDex: ModdedDex) {\n\tlet buf = ``;\n\tconst origSpecies = baseDex.species.get(species);\n\tconst newSpecies = dex.species.get(species);\n\tif (\n\t\tnewSpecies.types.join('/') !== origSpecies.types.join('/') ||\n\t\tObject.values(newSpecies.abilities).join('/') !== Object.values(origSpecies.abilities).join('/') ||\n\t\tObject.values(newSpecies.baseStats).join('/') !== Object.values(origSpecies.baseStats).join('/')\n\t) {\n\t\tbuf += `<hr />`;\n\t\tbuf += Chat.getDataPokemonHTML(newSpecies, dex.gen, 'SSB');\n\t\tlet weighthit = 20;\n\t\tif (newSpecies.weighthg >= 2000) {\n\t\t\tweighthit = 120;\n\t\t} else if (newSpecies.weighthg >= 1000) {\n\t\t\tweighthit = 100;\n\t\t} else if (newSpecies.weighthg >= 500) {\n\t\t\tweighthit = 80;\n\t\t} else if (newSpecies.weighthg >= 250) {\n\t\t\tweighthit = 60;\n\t\t} else if (newSpecies.weighthg >= 100) {\n\t\t\tweighthit = 40;\n\t\t}\n\t\tconst details: {[k: string]: string} = {\n\t\t\t\"Dex#\": String(newSpecies.num),\n\t\t\tGen: String(newSpecies.gen) || 'CAP',\n\t\t\tHeight: `${newSpecies.heightm} m`,\n\t\t};\n\t\tdetails[\"Weight\"] = `${newSpecies.weighthg / 10} kg <em>(${weighthit} BP)</em>`;\n\t\tif (newSpecies.color && dex.gen >= 5) details[\"Dex Colour\"] = newSpecies.color;\n\t\tif (newSpecies.eggGroups && dex.gen >= 2) details[\"Egg Group(s)\"] = newSpecies.eggGroups.join(\", \");\n\t\tconst evos: string[] = [];\n\t\tfor (const evoName of newSpecies.evos) {\n\t\t\tconst evo = dex.species.get(evoName);\n\t\t\tif (evo.gen <= dex.gen) {\n\t\t\t\tconst condition = evo.evoCondition ? ` ${evo.evoCondition}` : ``;\n\t\t\t\tswitch (evo.evoType) {\n\t\t\t\tcase 'levelExtra':\n\t\t\t\t\tevos.push(`${evo.name} (level-up${condition})`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'levelFriendship':\n\t\t\t\t\tevos.push(`${evo.name} (level-up with high Friendship${condition})`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'levelHold':\n\t\t\t\t\tevos.push(`${evo.name} (level-up holding ${evo.evoItem}${condition})`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'useItem':\n\t\t\t\t\tevos.push(`${evo.name} (${evo.evoItem})`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'levelMove':\n\t\t\t\t\tevos.push(`${evo.name} (level-up with ${evo.evoMove}${condition})`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'other':\n\t\t\t\t\tevos.push(`${evo.name} (${evo.evoCondition})`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'trade':\n\t\t\t\t\tevos.push(`${evo.name} (trade${evo.evoItem ? ` holding ${evo.evoItem}` : condition})`);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tevos.push(`${evo.name} (${evo.evoLevel}${condition})`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!evos.length) {\n\t\t\tdetails[`<font color=\"#686868\">Does Not Evolve</font>`] = \"\";\n\t\t} else {\n\t\t\tdetails[\"Evolution\"] = evos.join(\", \");\n\t\t}\n\t\tbuf += `<font size=\"1\">${Object.entries(details).map(([detail, value]) => (\n\t\t\tvalue === '' ? detail : `<font color=\"#686868\">${detail}:</font> ${value}`\n\t\t)).join(\"&nbsp;|&ThickSpace;\")}</font>`;\n\t}\n\treturn buf;\n}\n\nfunction generateSSBInnateInfo(name: string, dex: ModdedDex, baseDex: ModdedDex) {\n\tlet buf = ``;\n\t// Special casing for users whose usernames are already existing, i.e. dhelmise\n\tlet effect = dex.conditions.get(name + 'user');\n\tlet longDesc = ``;\n\tconst baseAbility = baseDex.deepClone(baseDex.abilities.get('noability'));\n\tif (effect.exists && (effect as any).innateName && (effect.desc || effect.shortDesc)) {\n\t\tbaseAbility.name = (effect as any).innateName;\n\t\tif (!effect.desc && !effect.shortDesc) {\n\t\t\tbaseAbility.desc = baseAbility.shortDesc = \"This innate does not have a description.\";\n\t\t}\n\t\tif (effect.desc) baseAbility.desc = effect.desc;\n\t\tif (effect.shortDesc) baseAbility.shortDesc = effect.shortDesc;\n\t\tbuf += `<hr />Innate Ability:<br />${Chat.getDataAbilityHTML(baseAbility)}`;\n\t\tif (effect.desc && effect.shortDesc && effect.desc !== effect.shortDesc) {\n\t\t\tlongDesc = effect.desc;\n\t\t}\n\t} else {\n\t\teffect = dex.deepClone(dex.conditions.get(name));\n\t\tif (!effect.desc && !effect.shortDesc) {\n\t\t\teffect.desc = effect.shortDesc = \"This innate does not have a description.\";\n\t\t}\n\t\tif (effect.exists && (effect as any).innateName) {\n\t\t\tbaseAbility.name = (effect as any).innateName;\n\t\t\tif (effect.desc) baseAbility.desc = effect.desc;\n\t\t\tif (effect.shortDesc) baseAbility.shortDesc = effect.shortDesc;\n\t\t\tbuf += `<hr />Innate Ability:<br />${Chat.getDataAbilityHTML(baseAbility)}`;\n\t\t\tif (effect.desc && effect.shortDesc && effect.desc !== effect.shortDesc) {\n\t\t\t\tlongDesc = effect.desc;\n\t\t\t}\n\t\t}\n\t}\n\tif (buf) {\n\t\tconst details: {[k: string]: string} = {Gen: '9'};\n\t\tbuf += `<font size=\"1\">${Object.entries(details).map(([detail, value]) => (\n\t\t\tvalue === '' ? detail : `<font color=\"#686868\">${detail}:</font> ${value}`\n\t\t)).join(\"&nbsp;|&ThickSpace;\")}</font>`;\n\t}\n\tif (longDesc) {\n\t\tbuf += `<details><summary><strong>In-Depth Description</strong></summary>${longDesc}</details>`;\n\t}\n\treturn buf;\n}\n\nfunction SSBSets(target: string) {\n\tconst baseDex = Dex;\n\tconst dex = Dex.forFormat('gen9superstaffbrosultimate');\n\tif (!Object.keys(ssbSets).map(toID).includes(toID(target))) {\n\t\treturn {e: `Error: ${target.trim()} doesn't have a [Gen 9] Super Staff Bros Ultimate set.`};\n\t}\n\tlet name = '';\n\tfor (const member in ssbSets) {\n\t\tif (toID(member) === toID(target)) name = member;\n\t}\n\tlet buf = '';\n\tconst sets: string[] = [];\n\tfor (const set in ssbSets) {\n\t\tif (!set.startsWith(name)) continue;\n\t\tif (!ssbSets[set].skip && set !== name) continue;\n\t\tsets.push(set);\n\t}\n\tfor (const setName of sets) {\n\t\tconst set = ssbSets[setName];\n\t\tconst mutatedSpecies = dex.species.get(set.species);\n\t\tif (!set.skip) {\n\t\t\tbuf += Utils.html`<h1><psicon pokemon=\"${mutatedSpecies.id}\">${setName}</h1>`;\n\t\t} else {\n\t\t\tbuf += `<details><summary><psicon pokemon=\"${set.species}\"><strong>${setName.split('-').slice(1).join('-') + ' forme'}</strong></summary>`;\n\t\t}\n\t\tbuf += generateSSBSet(set, dex, baseDex);\n\t\tconst item = dex.items.get(set.item as string);\n\t\tif (!set.skip || set.signatureMove !== ssbSets[set.skip].signatureMove) {\n\t\t\tconst sigMove = baseDex.moves.get(set.signatureMove).exists && !Array.isArray(set.item) &&\n\t\t\t\ttypeof item.zMove === 'string' ?\n\t\t\t\tdex.moves.get(item.zMove) : dex.moves.get(set.signatureMove);\n\t\t\tbuf += generateSSBMoveInfo(sigMove, dex);\n\t\t}\n\t\tbuf += generateSSBItemInfo(set, dex, baseDex);\n\t\tbuf += generateSSBAbilityInfo(set, dex, baseDex);\n\t\tbuf += generateSSBInnateInfo(setName, dex, baseDex);\n\t\tbuf += generateSSBPokemonInfo(set.species, dex, baseDex);\n\t\tif (!Array.isArray(set.item) && item.megaStone) {\n\t\t\tbuf += generateSSBPokemonInfo(item.megaStone, dex, baseDex);\n\t\t// keys and Kennedy have an itemless forme change\n\t\t} else if (['Rayquaza'].includes(set.species)) {\n\t\t\tbuf += generateSSBPokemonInfo(`${set.species}-Mega`, dex, baseDex);\n\t\t} else if (['Cinderace'].includes(set.species)) {\n\t\t\tbuf += generateSSBPokemonInfo(`${set.species}-Gmax`, dex, baseDex);\n\t\t}\n\t\tif (set.skip) buf += `</details>`;\n\t}\n\treturn buf;\n}\n\n\nexport const disabledSets = Chat.oldPlugins.ssb?.disabledSets || [];\n\nfunction enforceDisabledSets() {\n\tfor (const process of Rooms.PM.processes) {\n\t\tprocess.getProcess().send(`EVAL\\n\\nConfig.disabledssbsets = ${JSON.stringify(disabledSets)}`);\n\t}\n}\n\nenforceDisabledSets();\n\nexport const commands: Chat.ChatCommands = {\n\tssb(target, room, user) {\n\t\tif (!this.runBroadcast()) return;\n\t\tif (!target) return this.parse(`/help ssb`);\n\t\tconst set = SSBSets(target);\n\t\tif (typeof set !== 'string') {\n\t\t\tthrow new Chat.ErrorMessage(set.e);\n\t\t}\n\t\treturn this.sendReplyBox(set);\n\t},\n\tssbhelp: [\n\t\t`/ssb [staff member] - Displays a staff member's Super Staff Bros. set and custom features.`,\n\t],\n\tenablessbset: 'disablessbset',\n\tdisablessbset(target, room, user, connection, cmd) {\n\t\tthis.checkCan('rangeban');\n\t\ttarget = toID(target);\n\t\tif (!Object.keys(ssbSets).map(toID).includes(target as ID)) {\n\t\t\tthrow new Chat.ErrorMessage(`${target} has no SSB set.`);\n\t\t}\n\t\tconst disableIdx = disabledSets.indexOf(target);\n\t\tif (cmd.startsWith('enable')) {\n\t\t\tif (disableIdx < 0) {\n\t\t\t\tthrow new Chat.ErrorMessage(`${target}'s set is not disabled.`);\n\t\t\t}\n\t\t\tdisabledSets.splice(disableIdx, 1);\n\t\t\tthis.privateGlobalModAction(`${user.name} enabled ${target}'s SSB set.`);\n\t\t} else {\n\t\t\tif (disableIdx > -1) {\n\t\t\t\tthrow new Chat.ErrorMessage(`That set is already disabled.`);\n\t\t\t}\n\t\t\tdisabledSets.push(target);\n\t\t\tthis.privateGlobalModAction(`${user.name} disabled the SSB set for ${target}`);\n\t\t}\n\t\tenforceDisabledSets();\n\t},\n};\n"],
  "mappings": "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",
  "names": []
}
